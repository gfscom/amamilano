name: Auto Release on Version Change

on:
  push:
    branches:
      - master
    paths:
      - 'amamilano.py'

jobs:
  check-version-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Extract version info
        id: version-extractor
        run: |
          # Estrazione robusta con Python
          VERSION=$(python3 -c "import re; f=open('amamilano.py'); print(re.search(r'version_info\s*=\s*[\'\"]([^\'\"]+)[\'\"]', f.read()).group(1))")
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Extracted version: ${VERSION}"

      - name: Verify tag existence
        id: tag-checker
        run: |
          if git rev-parse "refs/tags/${{ steps.version-extractor.outputs.version }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Tag ${{ steps.version-extractor.outputs.version }} already exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Tag ${{ steps.version-extractor.outputs.version }} will be created"
          fi

      - name: Generate changelog
        if: steps.tag-checker.outputs.exists == 'false'
        id: changelog-generator
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          
          if [ -z "${LATEST_TAG}" ]; then
            echo "Generating full changelog"
            CHANGES=$(git log --pretty=format:"- %s [%h]" --no-merges)
          else
            echo "Generating changelog since ${LATEST_TAG}"
            CHANGES=$(git log ${LATEST_TAG}..HEAD --pretty=format:"- %s [%h]" --no-merges)
          fi

          # Format multi-line output properly
          DELIMITER=$(openssl rand -hex 16)
          echo "changes<<${DELIMITER}" >> $GITHUB_OUTPUT
          echo "${CHANGES}" >> $GITHUB_OUTPUT
          echo "${DELIMITER}" >> $GITHUB_OUTPUT

      - name: Create Git tag
        if: steps.tag-checker.outputs.exists == 'false'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag -a "${{ steps.version-extractor.outputs.version }}" -m "Release ${{ steps.version-extractor.outputs.version }}"
          git push origin "${{ steps.version-extractor.outputs.version }}"

      - name: Create GitHub release
        if: steps.tag-checker.outputs.exists == 'false'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version-extractor.outputs.version }}
          name: "Release ${{ steps.version-extractor.outputs.version }}"
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## Changes in this release
            
            ${{ steps.changelog-generator.outputs.changes }}

            _Automatically generated by GitHub Actions_
          token: ${{ secrets.GITHUB_TOKEN }}
          